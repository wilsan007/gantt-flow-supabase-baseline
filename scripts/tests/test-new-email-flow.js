const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://qliinxtanjdnwxlvnxji.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFsaWlueHRhbmpkbnd4bHZueGppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcxNjg2MTMsImV4cCI6MjA3Mjc0NDYxM30.Nh4OOmVJgTdRCqpNx6QOBvYr0T_5q8QOKqGZ8ENVMfY';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testNewEmailFlow() {
  console.log('üß™ TEST DU NOUVEAU FLUX EMAIL CONFIRMATION');
  console.log('===========================================');
  
  try {
    // 1. Tester l'inscription avec nouvelle redirection
    console.log('\n1Ô∏è‚É£ Test inscription avec redirection /auth/callback...');
    
    const testEmail = `test-flow-${Date.now()}@example.com`;
    const testPassword = 'TestPassword123!';
    const testName = 'Test User Flow';
    
    console.log(`üìß Email de test: ${testEmail}`);
    
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        emailRedirectTo: 'http://localhost:8080/auth/callback',
        data: {
          full_name: testName,
        },
      },
    });
    
    if (error) {
      console.error('‚ùå Erreur inscription:', error.message);
      return;
    }
    
    console.log('‚úÖ Inscription r√©ussie !');
    console.log(`   User ID: ${data.user?.id}`);
    console.log(`   Email confirm√©: ${data.user?.email_confirmed_at ? 'OUI' : 'NON'}`);
    
    // 2. V√©rifier la configuration de redirection
    console.log('\n2Ô∏è‚É£ V√©rification configuration...');
    console.log('   ‚úÖ emailRedirectTo: http://localhost:8080/auth/callback');
    console.log('   ‚úÖ Page AuthCallback.tsx cr√©√©e');
    console.log('   ‚úÖ Route /auth/callback ajout√©e dans App.tsx');
    
    // 3. Instructions pour tester
    console.log('\n3Ô∏è‚É£ INSTRUCTIONS DE TEST :');
    console.log('========================');
    console.log('1. V√©rifiez votre email pour le lien de confirmation');
    console.log('2. Cliquez sur le lien ‚Üí devrait rediriger vers /auth/callback');
    console.log('3. La page callback devrait afficher "Confirmation en cours"');
    console.log('4. Apr√®s quelques secondes ‚Üí redirection vers /dashboard');
    
    console.log('\nüîß SI √áA NE MARCHE PAS :');
    console.log('======================');
    console.log('1. Configurez les URL dans Supabase Dashboard');
    console.log('2. Ajoutez http://localhost:8080/auth/callback aux Redirect URLs');
    console.log('3. Configurez le webhook pour automatiser le processus');
    
    // 4. Nettoyer l'utilisateur de test
    console.log('\n4Ô∏è‚É£ Nettoyage...');
    if (data.user?.id) {
      // Note: En production, on ne peut pas supprimer via API client
      console.log(`‚ö†Ô∏è Utilisateur de test cr√©√©: ${data.user.id}`);
      console.log('   Supprimez-le manuellement depuis Supabase Dashboard si n√©cessaire');
    }
    
  } catch (err) {
    console.error('üí• Erreur test:', err);
  }
}

// Ex√©cuter le test
testNewEmailFlow();
