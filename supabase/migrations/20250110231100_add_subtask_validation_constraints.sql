-- Migration: Ajouter des contraintes de validation pour les sous-t√¢ches
-- Date: 2025-01-10
-- Description: Emp√™che l'insertion de sous-t√¢ches avec des dates en dehors de leur t√¢che parente

BEGIN;

-- ============================================
-- 1. FONCTION DE VALIDATION DES SOUS-T√ÇCHES
-- ============================================

-- Fonction pour v√©rifier que les dates des sous-t√¢ches sont dans la plage de la t√¢che parente
CREATE OR REPLACE FUNCTION validate_subtask_dates_within_parent()
RETURNS TRIGGER AS $$
DECLARE
  parent_start DATE;
  parent_end DATE;
BEGIN
  -- Si la t√¢che n'a pas de parent, pas de validation (c'est une t√¢che parente)
  IF NEW.parent_id IS NULL THEN
    RETURN NEW;
  END IF;

  -- R√©cup√©rer les dates de la t√¢che parente
  SELECT start_date, due_date 
  INTO parent_start, parent_end
  FROM tasks 
  WHERE id = NEW.parent_id;

  -- Si la t√¢che parente n'a pas de dates d√©finies, pas de validation
  IF parent_start IS NULL OR parent_end IS NULL THEN
    RETURN NEW;
  END IF;

  -- V√©rifier que la date de d√©but de la sous-t√¢che est apr√®s le d√©but de la t√¢che parente
  IF NEW.start_date < parent_start THEN
    RAISE EXCEPTION E'‚ùå Date de d√©but invalide pour la sous-t√¢che\n\n'
      'üìÖ Date choisie : %\n'
      'üìù T√¢che parente : D√©but le %\n\n'
      'üí° Solution : Choisissez une date √† partir du %', 
      NEW.start_date, parent_start, parent_start
      USING HINT = 'La sous-t√¢che doit commencer apr√®s ou en m√™me temps que sa t√¢che parente';
  END IF;

  -- V√©rifier que la date de fin de la sous-t√¢che est avant la fin de la t√¢che parente
  IF NEW.due_date > parent_end THEN
    RAISE EXCEPTION E'‚ùå Date de fin invalide pour la sous-t√¢che\n\n'
      'üìÖ Date choisie : %\n'
      'üìù T√¢che parente : Se termine le %\n\n'
      'üí° Solution : Choisissez une date avant le %', 
      NEW.due_date, parent_end, parent_end
      USING HINT = 'La sous-t√¢che doit se terminer avant ou en m√™me temps que sa t√¢che parente';
  END IF;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Fonction de validation cr√©√©e: validate_subtask_dates_within_parent()';
END $$;

-- ============================================
-- 2. TRIGGER DE VALIDATION DES SOUS-T√ÇCHES
-- ============================================

-- Supprimer le trigger s'il existe
DROP TRIGGER IF EXISTS trigger_validate_subtask_dates ON tasks;

-- Cr√©er le trigger qui s'ex√©cute avant INSERT et UPDATE
CREATE TRIGGER trigger_validate_subtask_dates
  BEFORE INSERT OR UPDATE OF start_date, due_date, parent_id
  ON tasks
  FOR EACH ROW
  EXECUTE FUNCTION validate_subtask_dates_within_parent();

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Trigger cr√©√©: trigger_validate_subtask_dates';
END $$;

-- ============================================
-- 3. FONCTION POUR AJUSTER AUTOMATIQUEMENT LES SOUS-T√ÇCHES
-- ============================================

-- Fonction optionnelle pour ajuster automatiquement au lieu de rejeter
CREATE OR REPLACE FUNCTION auto_adjust_subtask_dates_to_parent()
RETURNS TRIGGER AS $$
DECLARE
  parent_start DATE;
  parent_end DATE;
  subtask_duration INTERVAL;
BEGIN
  -- Si la t√¢che n'a pas de parent, pas d'ajustement
  IF NEW.parent_id IS NULL THEN
    RETURN NEW;
  END IF;

  -- R√©cup√©rer les dates de la t√¢che parente
  SELECT start_date, due_date 
  INTO parent_start, parent_end
  FROM tasks 
  WHERE id = NEW.parent_id;

  -- Si la t√¢che parente n'a pas de dates d√©finies, pas d'ajustement
  IF parent_start IS NULL OR parent_end IS NULL THEN
    RETURN NEW;
  END IF;

  -- Calculer la dur√©e de la sous-t√¢che
  subtask_duration := NEW.due_date - NEW.start_date;

  -- Ajuster la date de d√©but si elle est avant la t√¢che parente
  IF NEW.start_date < parent_start THEN
    NEW.start_date := parent_start;
    NEW.due_date := parent_start + subtask_duration;
    
    -- Si la nouvelle date de fin d√©passe la t√¢che parente, ajuster
    IF NEW.due_date > parent_end THEN
      NEW.due_date := parent_end;
    END IF;
    
    RAISE NOTICE 'Dates de la sous-t√¢che ajust√©es automatiquement pour correspondre √† la t√¢che parente';
  END IF;

  -- Ajuster la date de fin si elle est apr√®s la t√¢che parente
  IF NEW.due_date > parent_end THEN
    NEW.due_date := parent_end;
    NEW.start_date := parent_end - subtask_duration;
    
    -- Si le nouveau d√©but est avant la t√¢che parente, ajuster
    IF NEW.start_date < parent_start THEN
      NEW.start_date := parent_start;
    END IF;
    
    RAISE NOTICE 'Dates de la sous-t√¢che ajust√©es automatiquement pour correspondre √† la t√¢che parente';
  END IF;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Fonction d''ajustement automatique cr√©√©e: auto_adjust_subtask_dates_to_parent()';
  RAISE NOTICE '';
  RAISE NOTICE 'üí° Pour activer l''ajustement automatique au lieu de la validation stricte:';
  RAISE NOTICE '   DROP TRIGGER trigger_validate_subtask_dates ON tasks;';
  RAISE NOTICE '   CREATE TRIGGER trigger_auto_adjust_subtask_dates';
  RAISE NOTICE '     BEFORE INSERT OR UPDATE OF start_date, due_date, parent_id';
  RAISE NOTICE '     ON tasks FOR EACH ROW';
  RAISE NOTICE '     EXECUTE FUNCTION auto_adjust_subtask_dates_to_parent();';
END $$;

-- ============================================
-- 4. R√âSUM√â
-- ============================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ Contraintes de validation des sous-t√¢ches install√©es avec succ√®s';
  RAISE NOTICE '';
  RAISE NOTICE 'üìã Hi√©rarchie de validation compl√®te:';
  RAISE NOTICE '   1. Projet ‚Üí T√¢ches (trigger_validate_task_dates)';
  RAISE NOTICE '   2. T√¢che parente ‚Üí Sous-t√¢ches (trigger_validate_subtask_dates)';
  RAISE NOTICE '   3. Dates coh√©rentes (tasks_dates_order_check, projects_dates_order_check)';
END $$;

COMMIT;
