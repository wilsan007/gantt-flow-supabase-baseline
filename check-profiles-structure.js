import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://qliinxtanjdnwxlvnxji.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFsaWlueHRhbmpkbnd4bHZueGppIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzE2ODYxMywiZXhwIjoyMDcyNzQ0NjEzfQ.THSC4CaaEh0IJPP-zPRXGFIbltg79wpOGoEG4diLZAI'
);

async function checkProfilesStructure() {
  console.log('üîç V√©rification de la structure de la table profiles...\n');
  
  try {
    // Essayer de r√©cup√©rer un profil existant pour voir la structure
    console.log('1Ô∏è‚É£ Test d\'acc√®s √† la table profiles...');
    const { data: testProfile, error: testError } = await supabase
      .from('profiles')
      .select('*')
      .limit(1);
    
    if (testError) {
      console.log('‚ùå Erreur d\'acc√®s √† profiles:', testError.message);
    } else {
      console.log('‚úÖ Acc√®s √† profiles r√©ussi');
      if (testProfile && testProfile.length > 0) {
        console.log('Structure d√©tect√©e:', Object.keys(testProfile[0]));
        
        // V√©rifier tenant_id
        if ('tenant_id' in testProfile[0]) {
          console.log('‚úÖ Colonne tenant_id EXISTE');
        } else {
          console.log('‚ùå Colonne tenant_id N\'EXISTE PAS');
        }
      } else {
        console.log('Table profiles vide, test avec insertion...');
      }
    }
    
    // Test d'insertion pour d√©tecter les colonnes manquantes
    console.log('\n2Ô∏è‚É£ Test d\'insertion avec tenant_id...');
    const testUserId = 'test-structure-check';
    const { error: insertError } = await supabase
      .from('profiles')
      .insert({
        user_id: testUserId,
        tenant_id: 'test-tenant-id',
        full_name: 'Test Structure',
        email: 'test@structure.com'
      });
    
    if (insertError) {
      console.log('‚ùå Erreur insertion:', insertError.message);
      if (insertError.message.includes('tenant_id')) {
        console.log('üéØ CONFIRMATION: Colonne tenant_id manquante');
      }
    } else {
      console.log('‚úÖ Insertion r√©ussie - tenant_id existe');
      // Nettoyer le test
      await supabase.from('profiles').delete().eq('user_id', testUserId);
    }
    
    // V√©rifier aussi s'il y a des donn√©es dans profiles
    console.log('\nüìä Donn√©es dans profiles:');
    const { data: profilesData, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .limit(5);
    
    if (profilesError) {
      console.log('‚ùå Erreur lors de la r√©cup√©ration des donn√©es:', profilesError.message);
    } else {
      console.log(`Nombre d'enregistrements (max 5): ${profilesData?.length || 0}`);
      if (profilesData && profilesData.length > 0) {
        console.log('Premier enregistrement:', profilesData[0]);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur globale:', error);
  }
}

checkProfilesStructure();
