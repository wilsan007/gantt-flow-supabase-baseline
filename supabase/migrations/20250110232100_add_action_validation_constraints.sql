-- Migration: Ajouter des contraintes de validation pour les actions
-- Date: 2025-01-10
-- Description: Emp√™che l'insertion d'actions avec des dates en dehors de leur t√¢che

BEGIN;

-- ============================================
-- 1. FONCTION DE VALIDATION DES ACTIONS
-- ============================================

-- Fonction pour v√©rifier que les dates des actions sont dans la plage de la t√¢che/sous-t√¢che
CREATE OR REPLACE FUNCTION validate_action_dates_within_task()
RETURNS TRIGGER AS $$
DECLARE
  task_start DATE;
  task_end DATE;
  task_title TEXT;
  is_subtask BOOLEAN;
BEGIN
  -- Si l'action n'a pas de date d'√©ch√©ance, pas de validation
  IF NEW.due_date IS NULL THEN
    RETURN NEW;
  END IF;

  -- R√©cup√©rer les dates de la t√¢che (ou sous-t√¢che)
  SELECT start_date, due_date, title, (parent_id IS NOT NULL)
  INTO task_start, task_end, task_title, is_subtask
  FROM tasks 
  WHERE id = NEW.task_id;

  -- Si la t√¢che n'a pas de dates d√©finies, pas de validation
  IF task_start IS NULL OR task_end IS NULL THEN
    RETURN NEW;
  END IF;

  -- V√©rifier que la date d'√©ch√©ance de l'action est avant la fin de la t√¢che/sous-t√¢che
  IF NEW.due_date > task_end THEN
    IF is_subtask THEN
      RAISE EXCEPTION E'‚ùå Date invalide pour l''action\n\n'
        'üìÖ Vous avez choisi : %\n'
        'üéØ Sous-t√¢che : "%"\n'
        '‚è∞ Date limite de la sous-t√¢che : %\n\n'
        'üí° Solution : Choisissez une date entre % et %', 
        NEW.due_date, task_title, task_end, task_start, task_end
        USING HINT = 'L''action doit se terminer avant ou en m√™me temps que sa sous-t√¢che parente';
    ELSE
      RAISE EXCEPTION E'‚ùå Date invalide pour l''action\n\n'
        'üìÖ Vous avez choisi : %\n'
        'üéØ T√¢che : "%"\n'
        '‚è∞ Date limite de la t√¢che : %\n\n'
        'üí° Solution : Choisissez une date entre % et %', 
        NEW.due_date, task_title, task_end, task_start, task_end
        USING HINT = 'L''action doit se terminer avant ou en m√™me temps que sa t√¢che parente';
    END IF;
  END IF;

  -- Optionnel: V√©rifier que l'action ne commence pas avant la t√¢che/sous-t√¢che
  -- (si vous ajoutez un champ start_date aux actions)
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Fonction de validation cr√©√©e: validate_action_dates_within_task()';
END $$;

-- ============================================
-- 2. TRIGGER DE VALIDATION DES ACTIONS
-- ============================================

-- Supprimer le trigger s'il existe
DROP TRIGGER IF EXISTS trigger_validate_action_dates ON task_actions;

-- Cr√©er le trigger qui s'ex√©cute avant INSERT et UPDATE
CREATE TRIGGER trigger_validate_action_dates
  BEFORE INSERT OR UPDATE OF due_date, task_id
  ON task_actions
  FOR EACH ROW
  EXECUTE FUNCTION validate_action_dates_within_task();

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Trigger cr√©√©: trigger_validate_action_dates';
END $$;

-- ============================================
-- 3. FONCTION POUR AJUSTER AUTOMATIQUEMENT LES ACTIONS
-- ============================================

-- Fonction optionnelle pour ajuster automatiquement au lieu de rejeter
CREATE OR REPLACE FUNCTION auto_adjust_action_dates_to_task()
RETURNS TRIGGER AS $$
DECLARE
  task_start DATE;
  task_end DATE;
  task_title TEXT;
  is_subtask BOOLEAN;
BEGIN
  -- Si l'action n'a pas de date d'√©ch√©ance, pas d'ajustement
  IF NEW.due_date IS NULL THEN
    RETURN NEW;
  END IF;

  -- R√©cup√©rer les dates de la t√¢che (ou sous-t√¢che)
  SELECT start_date, due_date, title, (parent_id IS NOT NULL)
  INTO task_start, task_end, task_title, is_subtask
  FROM tasks 
  WHERE id = NEW.task_id;

  -- Si la t√¢che n'a pas de dates d√©finies, pas d'ajustement
  IF task_start IS NULL OR task_end IS NULL THEN
    RETURN NEW;
  END IF;

  -- Ajuster la date d'√©ch√©ance si elle est apr√®s la t√¢che/sous-t√¢che
  IF NEW.due_date > task_end THEN
    NEW.due_date := task_end;
    IF is_subtask THEN
      RAISE NOTICE 'Date d''√©ch√©ance de l''action ajust√©e automatiquement pour correspondre √† la sous-t√¢che "%"', task_title;
    ELSE
      RAISE NOTICE 'Date d''√©ch√©ance de l''action ajust√©e automatiquement pour correspondre √† la t√¢che "%"', task_title;
    END IF;
  END IF;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Fonction d''ajustement automatique cr√©√©e: auto_adjust_action_dates_to_task()';
  RAISE NOTICE '';
  RAISE NOTICE 'üí° Pour activer l''ajustement automatique au lieu de la validation stricte:';
  RAISE NOTICE '   DROP TRIGGER trigger_validate_action_dates ON task_actions;';
  RAISE NOTICE '   CREATE TRIGGER trigger_auto_adjust_action_dates';
  RAISE NOTICE '     BEFORE INSERT OR UPDATE OF due_date, task_id';
  RAISE NOTICE '     ON task_actions FOR EACH ROW';
  RAISE NOTICE '     EXECUTE FUNCTION auto_adjust_action_dates_to_task();';
END $$;

-- ============================================
-- 4. R√âSUM√â
-- ============================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ Contraintes de validation des actions install√©es avec succ√®s';
  RAISE NOTICE '';
  RAISE NOTICE 'üìã Hi√©rarchie de validation compl√®te:';
  RAISE NOTICE '   1. Projet ‚Üí T√¢ches (trigger_validate_task_dates)';
  RAISE NOTICE '   2. T√¢che parente ‚Üí Sous-t√¢ches (trigger_validate_subtask_dates)';
  RAISE NOTICE '   3. T√¢che/Sous-t√¢che ‚Üí Actions (trigger_validate_action_dates)';
  RAISE NOTICE '   4. Dates coh√©rentes (tasks_dates_order_check, projects_dates_order_check)';
  RAISE NOTICE '';
  RAISE NOTICE 'üí° La contrainte fonctionne pour:';
  RAISE NOTICE '   ‚Ä¢ Actions de t√¢ches parentes';
  RAISE NOTICE '   ‚Ä¢ Actions de sous-t√¢ches';
  RAISE NOTICE '   Les messages d''erreur s''adaptent automatiquement au type';
END $$;

COMMIT;
